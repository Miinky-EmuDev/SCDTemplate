#!/usr/bin/perl
###############################################################################
# Copyright (c) 2011 by bgvanbur
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
###############################################################################

use strict;
use warnings;

if ( $#ARGV < 1 ) {
    &Help();
}

my $cmd = lc(shift @ARGV);
my $tokenSearchString = '';
my $tokenReplaceString = '';

if ( $cmd eq 'search' ) {
    if ( $#ARGV < 1 ) {
	&Help();
    }
    $tokenSearchString = shift @ARGV;
} elsif ( $cmd eq 'replace' ) {
    if ( $#ARGV < 2 ) {
	&Help();
    }
    $tokenSearchString = shift @ARGV;
    $tokenReplaceString = shift @ARGV;
} else {
    &Help();
}


if ( $tokenSearchString !~ m/^[0-9A-F]*$/i ||
     $tokenReplaceString !~ m/^[0-9A-F]*$/i ) {
    &Help();
}

my $updates = 0;

foreach my $binFile (@ARGV) {

    open( BIN, $binFile ) or die "Cannot read file: $binFile\n";

    binmode BIN;

    my $binSize = -s $binFile;

    my $binBuffer = '';

    read( BIN, $binBuffer, $binSize );

    my $tokenSearch = pack("H*",$tokenSearchString);
    my $tokenReplace = pack("H*",$tokenReplaceString);

    my $tokenLength = length($tokenSearch);

    my $modified = 0;

    my $index = 0;
    while ( $index >= 0 ) {
	$index = index($binBuffer,$tokenSearch,$index);
	if ( $index >= 0 ) {
	    $updates++;
	    if ( $cmd eq 'search' ) {
		printf( "$binFile: %8.8X\n", $index);
		$index++;
	    } elsif ( $cmd eq 'replace' ) {
		substr($binBuffer,$index,$tokenLength) = $tokenReplace;
		$index += length($tokenReplace);
	    }
	}
    }

    close BIN;

    if ( $modified ) {
	open( BIN, ">$binFile" );
	print BIN $binBuffer;
	close BIN;
    }
}

if ( $cmd eq 'replace' ) {
    print "$tokenSearchString -> $tokenReplaceString: $updates\n";
}

sub Help {
    die '
scdhex <cmd> [cmdoptions] <files>

[description]
  Performs search/replace type operations using hexadecimal strings on a binary
  file.  Was originally developed for simple ISO hacking of Sonic CD.

[cmd]
  search <search>
  replace <search> <replace>

[examples]
  scdhex search \
    0000000008220A440C660E880EEE0AAA0888044408AE046A000E0008000400EE R*__.MMD
  scdhex replace 427900FF1512 4E714E714E71 R*__.MMD

';
}
